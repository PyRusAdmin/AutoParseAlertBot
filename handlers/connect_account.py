# -*- coding: utf-8 -*-
import os

from aiogram import F
from aiogram.types import Message
from loguru import logger

from database.database import User
from keyboards.keyboards import (back_keyboard)
from locales.locales import get_text
from system.dispatcher import router


@router.message(F.text == "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
async def handle_connect_account(message: Message):
    """–ú–µ–Ω—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞"""
    user_tg = message.from_user

    # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å language = "unset", –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    user, created = User.get_or_create(
        user_id=user_tg.id,
        defaults={
            "username": user_tg.username,
            "first_name": user_tg.first_name,
            "last_name": user_tg.last_name,
            "language": "unset"  # ‚Üê –∫–ª—é—á–µ–≤–æ–µ: "unset" = —è–∑—ã–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω
        }
    )

    text = get_text(user.language, "connect_account")
    await message.answer(text, reply_markup=back_keyboard())


@router.message(F.document)
async def handle_account_file(message: Message):
    """
    –ü—Ä–∏—ë–º —Ñ–∞–π–ª–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –≤ –ø–∞–ø–∫—É account.
    –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã .session –∏–ª–∏ .session-journal ‚Äî –æ–Ω–∏ —É–¥–∞–ª—è—é—Ç—Å—è.
    """
    user_tg = message.from_user
    document = message.document
    user_id = user_tg.id
    logger.info(f"User {user_id} –æ—Ç–ø—Ä–∞–≤–∏–ª –∞–∫–∫–∞—É–Ω—Ç {document.file_name}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not document.file_name.endswith(".session"):
        await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏ (.session).")
        return

    # –ü–∞–ø–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_folder = os.path.join(os.getcwd(), f"accounts/{user_id}")
    os.makedirs(user_folder, exist_ok=True)

    # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –Ω–æ–≤–æ–º—É —Ñ–∞–π–ª—É
    new_file_path = os.path.join(user_folder, document.file_name)

    # üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã .session –∏ .session-journal
    deleted_files = []
    for file_name in os.listdir(user_folder):
        if file_name.endswith(".session") or file_name.endswith(".session-journal"):
            full_path = os.path.join(user_folder, file_name)
            try:
                os.remove(full_path)
                deleted_files.append(file_name)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {file_name}: {e}")

    if deleted_files:
        logger.info(f"–£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã: {', '.join(deleted_files)}")

    # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    file = await message.bot.get_file(document.file_id)
    await message.bot.download_file(file.file_path, new_file_path)

    # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    msg = f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç {document.file_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω."
    if deleted_files:
        msg += f"\n‚ôªÔ∏è –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã ({', '.join(deleted_files)}) –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –ê–∫–∫–∞—É–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω"
    await message.answer(msg)


def register_connect_account_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    router.message.register(handle_connect_account)  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
    router.message.register(handle_account_file)  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–µ–º–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .session
