from aiogram import F
from aiogram.filters import CommandStart
from aiogram.types import Message

from database.database import User
from keyboards.keyboards import get_lang_keyboard
from locales.locales import get_text
from system.dispatcher import router


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    user_tg = message.from_user

    # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å language = "unset", –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    user, created = User.get_or_create(
        user_id=user_tg.id,
        defaults={
            "username": user_tg.username,
            "first_name": user_tg.first_name,
            "last_name": user_tg.last_name,
            "language": "unset"  # ‚Üê –∫–ª—é—á–µ–≤–æ–µ: "unset" = —è–∑—ã–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω
        }
    )
    if not created:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å (–Ω–∞ —Å–ª—É—á–∞–π —Å–º–µ–Ω—ã –∏–º–µ–Ω–∏ –∏ —Ç.–ø.)
        user.username = user_tg.username
        user.first_name = user_tg.first_name
        user.last_name = user_tg.last_name
        user.save()

    # –ï—Å–ª–∏ —è–∑—ã–∫ –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω ‚Äî –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å
    if user.language == "unset":
        # –ú–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ Telegram, –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–∞—Ç—å –≤—ã–±–æ—Ä
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Please choose your language:",
            reply_markup=get_lang_keyboard()
        )
    else:
        # –Ø–∑—ã–∫ —É–∂–µ –≤—ã–±—Ä–∞–Ω ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º
        text = get_text(user.language, "welcome_message")
        await message.answer(text)


@router.message(F.text.in_({"üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá¨üáß English"}))
async def handle_language_selection(message: Message):
    user_tg = message.from_user
    user = User.get(User.user_id == user_tg.id)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞
    if message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π":
        user.language = "ru"
        confirm = get_text("ru", "lang_selected")
    elif message.text == "üá¨üáß English":
        user.language = "en"
        confirm = get_text("en", "lang_selected")
    else:
        return  # –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–ª—É—á–∏—Ç—å—Å—è, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π

    user.save()

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –≤—ã–±–æ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await message.answer(confirm, reply_markup=None)
    await message.answer(get_text(user.language, "welcome_message"))


def register_greeting_handler():
    router.message.register(command_start_handler)
    router.message.register(handle_language_selection)
